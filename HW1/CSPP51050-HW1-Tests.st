TestCase subclass: #CourseTests	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'CSPP51050-HW1-Tests'!!CourseTests methodsFor: 'testing' stamp: 'sjh 4/21/2013 17:47'!testAddStudent	"test that adding students works up to the max enrollment"	| testCourse |	testCourse := Course newOfMaxEnrollment: 3.	self should: [testCourse currentEnrollment = 0].	testCourse addStudent: 'Sam'.	self should: [testCourse currentEnrollment = 1].	testCourse addStudent: 'Chris'.	self should: [testCourse currentEnrollment = 2].	testCourse addStudent: 'Erin'.	self should: [testCourse currentEnrollment = 3].	testCourse addStudent: 'Mike'.	self should: [testCourse currentEnrollment = 3].! !!CourseTests methodsFor: 'testing' stamp: 'sjh 4/21/2013 17:13'!testCreateCourse	"test that course creation and initialization works properly"	| course |	course := Course new initializeStudents.	self shouldnt: [ course isNil ].	self shouldnt: [ course students isNil ].! !TestCase subclass: #RegistrarTests	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'CSPP51050-HW1-Tests'!!RegistrarTests methodsFor: 'testing' stamp: 'sjh 4/21/2013 17:35'!testGetInstance	"test the getInstance message"	| firstCallToGetInstance secondCallToGetInstance |	firstCallToGetInstance := Registrar getInstance. "assign an instance of Registrar to firstCallToGetInstance"	self shouldnt: [firstCallToGetInstance isNil]. "firstCallToGetInstance should not be nil"	self shouldnt:[ firstCallToGetInstance courses isNil]. "courses should be initialized"	secondCallToGetInstance := Registrar getInstance. "assign an instance of Registrar to secondCallToGetInstance"	self shouldnt: [secondCallToGetInstance isNil]. "secondCallToGetInstance should not be nil"	self should: [firstCallToGetInstance = secondCallToGetInstance]. "firstCallToGetInstance should equal secondCallToGetInstance"! !!RegistrarTests methodsFor: 'testing' stamp: 'sjh 4/21/2013 15:55'!testNewRegistrar	"calling new on Registrar should return an error because Registrar is a Singleton"	self should: [ Registrar new ] raise: Error! !