Object subclass: #Course	instanceVariableNames: 'maxEnrollment currentEnrollment students'	classVariableNames: ''	poolDictionaries: ''	category: 'CSPP51050-HW1'!!Course methodsFor: 'accessing' stamp: 'sjh 4/21/2013 17:19'!addStudent	"comment stating purpose of message"	! !!Course methodsFor: 'accessing' stamp: 'sjh 4/21/2013 17:21'!addStudent: anObject	"comment stating purpose of message"	students add: anObject.! !!Course methodsFor: 'accessing' stamp: 'sjh 4/21/2013 16:57'!currentEnrollment	^ currentEnrollment! !!Course methodsFor: 'accessing' stamp: 'sjh 4/21/2013 16:57'!currentEnrollment: anObject	currentEnrollment := anObject! !!Course methodsFor: 'accessing' stamp: 'sjh 4/21/2013 16:57'!maxEnrollment	^ maxEnrollment! !!Course methodsFor: 'accessing' stamp: 'sjh 4/21/2013 16:57'!maxEnrollment: anObject	maxEnrollment := anObject! !!Course methodsFor: 'accessing' stamp: 'sjh 4/21/2013 16:57'!students	^ students! !!Course methodsFor: 'accessing' stamp: 'sjh 4/21/2013 17:19'!students: anObject	students := anObject! !!Course methodsFor: 'initialize-release' stamp: 'sjh 4/21/2013 17:15'!initialize	"initialize a Course"	self currentEnrollment: 0.	self maxEnrollment: 0.	self initializeStudents.	! !!Course methodsFor: 'initialize-release' stamp: 'sjh 4/21/2013 17:21'!initializeStudents	"initialize students to a new Dictionary"	self students: Set new.! !!Course methodsFor: 'initialize-release' stamp: 'sjh 4/21/2013 17:16'!newOfMaxEnrollment: maxEnrollment	"comment stating purpose of message"	| course |		course := self basicNew.	course maxEnrollment: maxEnrollment.	course currentEnrollment: 0.	course initializeStudents.		^course! !Object subclass: #Registrar	instanceVariableNames: 'courses'	classVariableNames: 'UniqueInstance'	poolDictionaries: ''	category: 'CSPP51050-HW1'!!Registrar methodsFor: 'initialize-release' stamp: 'sjh 4/21/2013 17:25'!initializeCourses	"initialize courses instance variable to a new Dictionary"	self courses: Set new.! !!Registrar methodsFor: 'accessing' stamp: 'sjh 4/21/2013 16:42'!courses	^ courses! !!Registrar methodsFor: 'accessing' stamp: 'sjh 4/21/2013 16:42'!courses: anObject	courses := anObject! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Registrar class	instanceVariableNames: ''!!Registrar class methodsFor: 'instance creation' stamp: 'sjh 4/21/2013 17:29'!getInstance	"return the Singleton instance of Registrar"	UniqueInstance isNil		ifTrue: [UniqueInstance := self basicNew ].	^UniqueInstance! !!Registrar class methodsFor: 'instance creation' stamp: 'sjh 4/21/2013 15:50'!new	"override new to return an error if anyone tries to instantiate Registrar without calling getInstance"	self error: 'You may not instantiate Registrar using the new message. Use the getInstance message to get the singleton instance of Registrar'! !