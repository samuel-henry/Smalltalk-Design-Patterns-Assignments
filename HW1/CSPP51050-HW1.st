Object subclass: #Course	instanceVariableNames: 'name maxEnrollment currentEnrollment students'	classVariableNames: ''	poolDictionaries: ''	category: 'CSPP51050-HW1'!!Course commentStamp: 'sjh 4/21/2013 21:16' prior: 0!Courses have a maximum enrollment and a set of enrolled students. The number of enrolled students may not exceed the Course's maximum enrollment.!!Course methodsFor: 'accessing' stamp: 'sjh 4/21/2013 17:19'!addStudent	"comment stating purpose of message"	! !!Course methodsFor: 'accessing' stamp: 'sjh 4/21/2013 17:44'!addStudent: anObject	"comment stating purpose of message"	self currentEnrollment < self maxEnrollment		ifTrue: [ students add: anObject. self currentEnrollment: self currentEnrollment + 1 ]		ifFalse: [ Transcript show: 'Cannot add another student. Course is fully enrolled.']! !!Course methodsFor: 'accessing' stamp: 'sjh 4/21/2013 16:57'!currentEnrollment	^ currentEnrollment! !!Course methodsFor: 'accessing' stamp: 'sjh 4/21/2013 16:57'!currentEnrollment: anObject	currentEnrollment := anObject! !!Course methodsFor: 'accessing' stamp: 'sjh 4/21/2013 16:57'!maxEnrollment	^ maxEnrollment! !!Course methodsFor: 'accessing' stamp: 'sjh 4/21/2013 16:57'!maxEnrollment: anObject	maxEnrollment := anObject! !!Course methodsFor: 'accessing' stamp: 'sjh 4/21/2013 18:25'!name	^ name! !!Course methodsFor: 'accessing' stamp: 'sjh 4/21/2013 18:25'!name: anObject	name := anObject! !!Course methodsFor: 'accessing' stamp: 'sjh 4/21/2013 16:57'!students	^ students! !!Course methodsFor: 'accessing' stamp: 'sjh 4/21/2013 17:19'!students: anObject	students := anObject! !!Course methodsFor: 'initialize-release' stamp: 'sjh 4/21/2013 18:32'!initialize	"initialize a Course"	self name: ''.	self currentEnrollment: 0.	self maxEnrollment: 0.	self initializeStudents.	! !!Course methodsFor: 'initialize-release' stamp: 'sjh 4/21/2013 17:21'!initializeStudents	"initialize students to a new Dictionary"	self students: Set new.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Course class	instanceVariableNames: ''!!Course class methodsFor: 'instance creation' stamp: 'sjh 4/21/2013 17:48'!newOfMaxEnrollment: maxEnrollment	"comment stating purpose of message"	| course |		course := self basicNew.	course maxEnrollment: maxEnrollment.	course currentEnrollment: 0.	course initializeStudents.		^course! !Object subclass: #Registrar	instanceVariableNames: 'courses'	classVariableNames: 'UniqueInstance'	poolDictionaries: ''	category: 'CSPP51050-HW1'!!Registrar commentStamp: 'sjh 4/21/2013 21:15' prior: 0!Singleton class for managing registration of students in Courses!!Registrar methodsFor: 'initialize-release' stamp: 'sjh 4/21/2013 17:25'!initializeCourses	"initialize courses instance variable to a new Dictionary"	self courses: Set new.! !!Registrar methodsFor: 'accessing' stamp: 'sjh 4/21/2013 17:56'!addCourse: anObject	"add a course to a Registrar"	self courses add: anObject.! !!Registrar methodsFor: 'accessing' stamp: 'sjh 4/21/2013 16:42'!courses	^ courses! !!Registrar methodsFor: 'accessing' stamp: 'sjh 4/21/2013 16:42'!courses: anObject	courses := anObject! !!Registrar methodsFor: 'accessing' stamp: 'sjh 4/21/2013 20:14'!enrollStudent: student inCourse: course	"enroll a student in a course"	course addStudent: student.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Registrar class	instanceVariableNames: ''!!Registrar class methodsFor: 'instance creation' stamp: 'sjh 4/21/2013 17:35'!getInstance	"return the Singleton instance of Registrar"	UniqueInstance isNil		ifTrue: [UniqueInstance := self basicNew initializeCourses ].	^UniqueInstance! !!Registrar class methodsFor: 'instance creation' stamp: 'sjh 4/21/2013 15:50'!new	"override new to return an error if anyone tries to instantiate Registrar without calling getInstance"	self error: 'You may not instantiate Registrar using the new message. Use the getInstance message to get the singleton instance of Registrar'! !!Registrar class methodsFor: 'as yet unclassified' stamp: 'sjh 4/21/2013 19:09'!reset	UniqueInstance := nil.! !