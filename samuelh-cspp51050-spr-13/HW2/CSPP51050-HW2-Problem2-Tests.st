TestCase subclass: #CapsFilterTests	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'CSPP51050-HW2-Problem2-Tests'!!CapsFilterTests methodsFor: 'as yet unclassified' stamp: 'sjh 5/7/2013 09:03'!testCapitalizesData	"confirm that CapsFilters capitalize data when they pull data from a pipe and that they pull nil if trying to pull from an empty pipe"	| someData aPipe aWriteFilter aCapsFilter |		aPipe := Pipe new.	aWriteFilter := WriteFilter new.	aCapsFilter := CapsFilter new.	aWriteFilter push: 'Samuel James Henry is a student in the CS department at UofC. Phone: 773-123-4567 E-Mail: samuelh@uchicago.edu' to: aPipe.	someData := aCapsFilter pullFrom: aPipe.	self should: [someData = 'SAMUEL JAMES HENRY IS A STUDENT IN THE CS DEPARTMENT AT UOFC. PHONE: 773-123-4567 E-MAIL: SAMUELH@UCHICAGO.EDU'.].	someData := aCapsFilter pullFrom: aPipe.	self should: [someData = nil].! !!CapsFilterTests methodsFor: 'as yet unclassified' stamp: 'sjh 5/7/2013 09:03'!testShouldNotPush		"CapsFilters are not implemented to push to pipes"	| aCapsFilter aPipe |		aCapsFilter := CapsFilter new.	aPipe := Pipe new.	self should: [aCapsFilter push: 'Test' to: aPipe] raise: Error.! !TestCase subclass: #LowerFilterTests	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'CSPP51050-HW2-Problem2-Tests'!!LowerFilterTests methodsFor: 'as yet unclassified' stamp: 'sjh 5/7/2013 09:03'!testLowercasesData	"confirm that LowerFilters lowercase data when they pull data from a pipe and that they pull nil if trying to pull from an empty pipe"	| someData aPipe aWriteFilter aLowerFilter |		aPipe := Pipe new.	aWriteFilter := WriteFilter new.	aLowerFilter := LowerFilter new.	aWriteFilter push: 'Samuel James Henry is a student in the CS department at UofC. Phone: 773-123-4567 E-Mail: samuelh@uchicago.edu' to: aPipe.	someData := aLowerFilter pullFrom: aPipe.	self should: [someData = 'samuel james henry is a student in the cs department at uofc. phone: 773-123-4567 e-mail: samuelh@uchicago.edu'.].	someData := aLowerFilter pullFrom: aPipe.	self should: [someData = nil].! !!LowerFilterTests methodsFor: 'as yet unclassified' stamp: 'sjh 5/7/2013 09:03'!testShouldNotPush		"LowerFilters are not implemented to push to pipes"	| aLowerFilter aPipe |		aLowerFilter := CapsFilter new.	aPipe := Pipe new.	self should: [aLowerFilter push: 'Test' to: aPipe] raise: Error.! !TestCase subclass: #PipeTests	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'CSPP51050-HW2-Problem2-Tests'!!PipeTests methodsFor: 'as yet unclassified' stamp: 'sjh 5/7/2013 09:05'!testPipeline	"test a pipeline of pushing and pulling data"	| pipe1 pipe2 writeFilter1 writeFilter2 capsFilter lowerFilter testData |		"create filters and pipes"	writeFilter1 := WriteFilter new.	writeFilter2 := WriteFilter new.	pipe1 := Pipe new.	pipe2 := Pipe new.	capsFilter := CapsFilter new.	lowerFilter := LowerFilter new.		"push test data to pipe"	testData := 'Hello world'.	writeFilter1 push: testData to: pipe1.	self should: [pipe1 size = 1].		"capitalize the test data by pulling it from the pipe"	testData := capsFilter pullFrom: pipe1.	self should: [pipe1 size = 0].	self should: [testData = 'HELLO WORLD'].		"push the capitalized data to another pipe"	writeFilter2 push: testData to: pipe2.	self should: [pipe2 size = 1].		"lowercase the data by pulling it from the pipe"	testData := lowerFilter pullFrom: pipe2.	self should: [pipe2 size = 0].	self should: [testData = 'hello world'].! !TestCase subclass: #WriteFilterTests	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'CSPP51050-HW2-Problem2-Tests'!!WriteFilterTests methodsFor: 'as yet unclassified' stamp: 'sjh 5/7/2013 09:04'!testShouldNotPull	"WriteFilters are not implemented to pull from pipes"	| aWriteFilter aPipe |		aWriteFilter := WriteFilter new.	aPipe := Pipe new.	self should: [aWriteFilter pullFrom: aPipe] raise: Error.! !!WriteFilterTests methodsFor: 'as yet unclassified' stamp: 'sjh 5/7/2013 09:08'!testWriteDataToPipe	"test that we can write data to a pipe"	| someData aPipe aWriteFilter |		aPipe := Pipe new.	aWriteFilter := WriteFilter new.	someData := 'Hello world.'.	self shouldnt: [aWriteFilter push: someData to: aPipe] raise: Error.	self should: [someData = aPipe last.].	someData := '343ksioahohag'.	self shouldnt: [aWriteFilter push: someData to: aPipe] raise: Error.	self should: [someData = aPipe last.].! !