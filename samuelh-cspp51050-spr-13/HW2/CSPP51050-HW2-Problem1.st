OrderedCollection subclass: #MessageQueue	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'CSPP51050-HW2-Problem1'!!MessageQueue commentStamp: 'sjh 5/7/2013 09:25' prior: 0!OrderedCollection pretty much implements our message queue already. We just give our queue some semantically meaningful message names"!!MessageQueue methodsFor: 'accessing' stamp: 'sjh 5/7/2013 09:37'!addMsg: aMessage	"add a message to the tail of the queue"	super add: aMessage! !!MessageQueue methodsFor: 'accessing' stamp: 'sjh 5/7/2013 09:37'!peek	"retrieve but do not remove the head of the queue"	^ super last! !!MessageQueue methodsFor: 'accessing' stamp: 'sjh 5/7/2013 09:37'!popMsg	"remove the head of the queue"	^ super removeLast! !Object subclass: #Msg	instanceVariableNames: 'payload'	classVariableNames: ''	poolDictionaries: ''	category: 'CSPP51050-HW2-Problem1'!!Msg methodsFor: 'accessing' stamp: 'sjh 5/7/2013 09:36'!payload	"return the message contents"	^ payload! !!Msg methodsFor: 'accessing' stamp: 'sjh 5/7/2013 09:36'!payload: anObject	"set the message contents"	payload := anObject! !Msg subclass: #QueryMsg	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'CSPP51050-HW2-Problem1'!Msg subclass: #ReplyMsg	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'CSPP51050-HW2-Problem1'!