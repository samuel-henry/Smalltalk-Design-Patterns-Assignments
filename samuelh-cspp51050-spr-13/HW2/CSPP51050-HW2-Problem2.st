Object subclass: #Filter	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'CSPP51050-HW2-Problem2'!!Filter commentStamp: 'sjh 5/7/2013 08:51' prior: 0!Abstract superclass!!Filter methodsFor: 'filtering' stamp: 'sjh 5/7/2013 08:58'!pullFrom: aPipe	"this should be implemented by concrete readers"	^ self subclassResponsibility! !!Filter methodsFor: 'filtering' stamp: 'sjh 5/7/2013 08:57'!push: someData to: aPipe	"this should be implemented by concrete writers"	^ self shouldNotImplement! !Filter subclass: #CapsFilter	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'CSPP51050-HW2-Problem2'!!CapsFilter commentStamp: 'sjh 5/7/2013 08:51' prior: 0!Filter that capitalizes the data it pulls from a pipe!!CapsFilter methodsFor: 'filtering' stamp: 'sjh 5/7/2013 09:10'!pullFrom: aPipe	"pop/uppercase data from a pipe"	| myData |		"if the pipe is not empty, uppercase its head, else just return nil below"	aPipe isEmpty		ifFalse: [myData := aPipe removeFirst asUppercase].			^ myData	! !Filter subclass: #LowerFilter	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'CSPP51050-HW2-Problem2'!!LowerFilter commentStamp: 'sjh 5/7/2013 09:16' prior: 0!Filter that lowercases the data it pulls from a pipe!!LowerFilter methodsFor: 'filtering' stamp: 'sjh 5/7/2013 09:10'!pullFrom: aPipe	"pop/lowercase data from a pipe"	| myData |		"if the pipe is not empty, lowercase its head, else just return nil below"	aPipe isEmpty		ifFalse: [myData := aPipe removeFirst asLowercase].			^ myData	! !OrderedCollection subclass: #Pipe	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'CSPP51050-HW2-Problem2'!!Pipe commentStamp: 'sjh 5/7/2013 09:11' prior: 0!OrderedCollection already implements everything we need so far for a pipe!Filter subclass: #WriteFilter	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'CSPP51050-HW2-Problem2'!!WriteFilter commentStamp: 'sjh 5/7/2013 09:16' prior: 0!Filter that pushes data to a pipe!!WriteFilter methodsFor: 'filtering' stamp: 'sjh 5/7/2013 09:11'!push: someData to: aPipe	"push some data to the tail of a pipe" 	aPipe add: someData.! !