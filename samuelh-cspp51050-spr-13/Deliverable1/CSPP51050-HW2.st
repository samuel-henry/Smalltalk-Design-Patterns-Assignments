Object subclass: #Component	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'CSPP51050-HW2'!Component subclass: #AccountComposite	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'CSPP51050-HW2'!Component subclass: #BondLeaf	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'CSPP51050-HW2'!Component subclass: #MoneyMarketLeaf	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'CSPP51050-HW2'!Component subclass: #PortfolioComposite	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'CSPP51050-HW2'!Object subclass: #PortfolioIterator	instanceVariableNames: 'first currItem'	classVariableNames: ''	poolDictionaries: ''	category: 'CSPP51050-HW2'!!PortfolioIterator methodsFor: 'accessing' stamp: 'sjh 4/29/2013 18:35'!currItem	^ currItem! !!PortfolioIterator methodsFor: 'accessing' stamp: 'sjh 4/29/2013 18:35'!currItem: anObject	currItem := anObject! !!PortfolioIterator methodsFor: 'accessing' stamp: 'sjh 4/29/2013 18:35'!first	^ first! !!PortfolioIterator methodsFor: 'accessing' stamp: 'sjh 4/29/2013 18:35'!first: anObject	first := anObject! !!PortfolioIterator methodsFor: 'accessing' stamp: 'sjh 4/29/2013 18:36'!isDone! !!PortfolioIterator methodsFor: 'accessing' stamp: 'sjh 4/29/2013 18:36'!next! !Object subclass: #PortfolioManager	instanceVariableNames: 'portfolio'	classVariableNames: 'UniqueInstance'	poolDictionaries: ''	category: 'CSPP51050-HW2'!!PortfolioManager commentStamp: '<historical>' prior: 0!Singleton class for managing registration of students in Courses!!PortfolioManager methodsFor: 'initialize-release' stamp: 'sjh 4/29/2013 18:39'!initializePortfolio	"initialize portfolio instance variable to a new Portfolio"	self portfolio: PortfolioComposite new.! !!PortfolioManager methodsFor: 'accessing' stamp: 'sjh 4/29/2013 18:07'!portfolio	^ portfolio! !!PortfolioManager methodsFor: 'accessing' stamp: 'sjh 4/29/2013 18:07'!portfolio: anObject	portfolio := anObject! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PortfolioManager class	instanceVariableNames: ''!!PortfolioManager class methodsFor: 'instance creation' stamp: 'sjh 4/29/2013 18:08'!getInstance	"return the Singleton instance of Registrar"	UniqueInstance isNil		ifTrue: [UniqueInstance := self basicNew initializePortfolio ].	^UniqueInstance! !!PortfolioManager class methodsFor: 'instance creation' stamp: 'sjh 4/29/2013 18:08'!new	"override new to return an error if anyone tries to instantiate PortfolioManager without calling getInstance"	self error: 'You may not instantiate PortfolioManager using the new message. Use the getInstance message to get the singleton instance of PortfolioManager'! !!PortfolioManager class methodsFor: 'instance creation' stamp: 'sjh 4/29/2013 18:03'!reset	UniqueInstance := nil.! !Object subclass: #PricingVisitor	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'CSPP51050-HW2'!!PricingVisitor methodsFor: 'visitation' stamp: 'sjh 4/29/2013 18:37'!visitAccount: anObject! !!PricingVisitor methodsFor: 'visitation' stamp: 'sjh 4/29/2013 18:37'!visitBond: anObject! !!PricingVisitor methodsFor: 'visitation' stamp: 'sjh 4/29/2013 18:37'!visitMoneyMarket: anObject! !!PricingVisitor methodsFor: 'visitation' stamp: 'sjh 4/29/2013 18:38'!visitPortfolio: anObject! !!PricingVisitor methodsFor: 'visitation' stamp: 'sjh 4/29/2013 18:37'!visitStock: anObject! !Component subclass: #StockLeaf	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'CSPP51050-HW2'!